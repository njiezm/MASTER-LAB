// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subject {
  id          String   @id @default(cuid())
  name        String
  description String?
  teacher     String?
  schedule    String?
  room        String?
  color       String   @default("blue")
  credits     Int      @default(0)
  semester    String   @default("Semestre 1")
  year        Int      @default(2024)
  icon        String   @default("BookOpen")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  resources   Resource[]
  courses     Course[]
}

model Resource {
  id          String   @id @default(cuid())
  title       String
  type        String   // 'pdf', 'note', 'video', 'audio', 'image', 'link', 'code'
  content     String?
  tags        String?  // JSON array of tags
  fileName    String?
  fileUrl     String?
  fileSize    Int?
  mimeType    String?
  favorite    Boolean  @default(false)
  subjectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  subject     Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)
}

model Course {
  id          String   @id @default(cuid())
  title       String
  description String?
  subjectId   String
  color       String   @default("blue")
  progress    Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  subject     Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}